(()=>{var e={236:e=>{self,e.exports=(()=>{"use strict";var e={d:(t,s)=>{for(var n in s)e.o(s,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:s[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function s(e={}){return e=>{}}function n(e={type:"beforeExec",maxLog:0,allowedTo:["USER"]}){const t=e;return t.type||(t.type="beforeExec"),t.maxLog||(t.maxLog=0),(e,s,n)=>{const o={share:t};e[s].madoiMethodConfig_=o}}function o(e={maxInterval:5e3}){const t=e;return(e,s,n)=>{const o={getState:t};e[s].madoiMethodConfig_=o}}function i(e={}){const t=e;return(e,s,n)=>{const o={setState:t};e[s].madoiMethodConfig_=o}}e.r(t),e.d(t,{ShareClass:()=>s,Share:()=>n,GetState:()=>o,SetState:()=>i,Madoi:()=>r});class r{constructor(e,t="",s={}){this.connecting=!1,this.selfPeerId=null,this.currentSenderPeerId=null,this.interimQueue=new Array,this.sendMessage({type:"SessionInfo",body:s}),this.sharedObjects=[],this.sharedFunctions=[],this.promises={},this.getStateMethods=new Map,this.setStateMethods=new Map,this.changedObjects=new Map,this.handlers={};let n=null;if(e.match(/^wss?:\/\//))n=e+`?key=${t}`;else{const s=document.querySelector("script[src$='madoi.js']").src.split("/",5);n=`${("http:"==s[0]?"ws:":"wss:")+"//"+s[2]+"/"+s[3]}/${e}?key=${t}`}this.ws=new WebSocket(n),this.ws.onopen=e=>this.handleOnOpen(e),this.ws.onclose=e=>this.handleOnClose(e),this.ws.onerror=e=>this.handleOnError(e),this.ws.onmessage=e=>this.handleOnMessage(e),setInterval((()=>{this.saveStates()}),1e3)}getCurrentSenderPeerId(){return this.currentSenderPeerId}isSelfCall(){return this.currentSenderPeerId==this.selfPeerId}close(){var e;null===(e=this.ws)||void 0===e||e.close()}handleOnOpen(e){var t;this.connecting=!0;for(let e of this.interimQueue)null===(t=this.ws)||void 0===t||t.send(JSON.stringify(e));this.interimQueue=[],this.onOpen(e)}handleOnClose(e){console.debug(`websocket closed because: ${e.reason}.`),this.connecting=!1,this.onClose(e),this.ws=null}handleOnError(e){this.onError(e)}handleOnMessage(e){var t=JSON.parse(e.data);this.currentSenderPeerId=t.sender,this.data(t)}data(e){if("EnterRoom"==e.type){if(this.selfPeerId=e.peerId,this.onEnterRoom(e.peerId,e.peers),e.histories)for(const t of e.histories)this.data(t)}else if("LeaveRoom"==e.type)this.onLeaveRoom();else if("PeerJoin"==e.type)this.onPeerJoin(e.peerId);else if("PeerLeave"==e.type)this.onPeerLeave(e.peerId);else if("Invocation"==e.type){const t=this.sharedFunctions[e.funcId];if(t){const s=this.applyInvocation(t,e.args);s instanceof Promise&&s.then((()=>{this.promises[e.funcId].resolve.apply(null,arguments)})).catch((()=>{this.promises[e.funcId].reject.apply(null,arguments)}))}else this.onElse(e)}else if("ObjectState"==e.type){const t=this.setStateMethods.get(e.objId);t&&t(e.state)}else{const t=e;this.handlers[t.type]?this.handlers[t.type](t):this.onElse(t)}}onOpen(e){}onClose(e){}onError(e){}onElse(e){}onEnterRoom(e,t){}onLeaveRoom(){}onPeerJoin(e){}onPeerLeave(e){}send(e,t,s){this.ws&&this.ws.send(JSON.stringify({type:e,headers:s,body:t}))}sendMessage(e){var t;this.connecting?null===(t=this.ws)||void 0===t||t.send(JSON.stringify(e)):this.interimQueue.push(e)}register(e,t=[]){if(!this.ws)return;if(e.madoiObjectId_)return void console.warn("Ignore object registration because it's already registered.");const s=e.constructor.name,n=this.sharedObjects.length;this.sharedObjects.push(e),e.madoiObjectId_=n;const o=new Array,i=new Array,r=new Map;Object.getOwnPropertyNames(e.__proto__).forEach((t=>{const n=e[t];if("function"!=typeof n)return;if(!n.madoiMethodConfig_)return;const a=n.madoiMethodConfig_,c=o.length;r.set(t,c),o.push(n),i.push({name:t,config:a}),console.debug(`add config ${s}.${t}=${JSON.stringify(a)} from decorator`)}));for(const e of t){const t=e[0],n=t.name,a=e[1];a.share&&(a.share.type||(a.share.type="beforeExec"),a.share.maxLog||(a.share.maxLog=0));const c=r.get(n);if(void 0===c){const c=o.length;r.set(n,c),o.push(t),i.push({name:e[0].name,config:a}),console.debug(`add config ${s}.${n}=${JSON.stringify(a)} from argument`)}else i[c].config=a,console.debug(`replace config ${s}.${n}=${JSON.stringify(a)} from argument`)}for(let t=0;t<o.length;t++){const s=o[t],r=i[t];if(r.config.share){const[t,o]=this.addSharedFunction(s.bind(e),r.config.share,n);r.funcId=t;const i=this;e[s.name]=function(){const e=i.changedObjects.get(n);return e?i.changedObjects.set(n,e+1):i.changedObjects.set(n,1),o.apply(null,arguments)}}else r.config.getState?this.getStateMethods.set(n,{method:s.bind(e),config:r.config.getState,lastGet:0}):r.config.setState&&this.setStateMethods.set(n,s.bind(e))}const a={type:"ObjectInfo",objId:n,className:s,methods:i};this.sendMessage(a)}registerFunction(e,t){const s=e.name,[n,o]=this.addSharedFunction(e,t),i={type:"FunctionInfo",funcId:n,name:s,config:t};return this.sendMessage(i),function(){return o.apply(null,arguments)}}addSharedFunction(e,t,s){const n=this.sharedFunctions.length;this.sharedFunctions.push(e),this.promises[n]={},this.promises[n].promise=new Promise(((e,t)=>{this.promises[n].resolve=e,this.promises[n].reject=t}));const o=this;return[n,function(){if(null!=o.ws){let i=null;"afterExec"==t.type&&(i=e.apply(null,arguments));const r={type:"Invocation",objId:s,funcId:n,funcName:e.name,args:Array.from(arguments)};return o.ws.send(JSON.stringify(r)),null!=i?i:o.promises[n].promise}if(e)return e.apply(null,arguments)}]}saveStates(){if(this.ws&&this.connecting)for(let[e,t]of this.changedObjects){if(0==t)continue;const s=this.getStateMethods.get(e);if(!s)continue;const n=performance.now();if(s.config.maxUpdates&&s.config.maxUpdates<=t||s.config.maxInterval&&s.config.maxInterval<=n-s.lastGet){const t={type:"ObjectState",objId:e,state:s.method()};this.ws.send(JSON.stringify(t)),s.lastGet=n,this.changedObjects.set(e,0),console.log(`state saved: ${e}`)}}}applyInvocation(e,t){return e.apply(null,t)}}return t})()}},t={};function s(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=s(236),t=function(e,t,s,n){var o,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(r=(i<3?o(r):i>3?o(t,s,r):o(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r};window.addEventListener("load",(function(){const t=new e.Madoi("wss://fungo.kcg.edu/madoi-20211003/rooms/whiteboard-o3id4alskdjj"),s=new n("#whiteboard");t.register(s)}));let n=class{constructor(e){this.drawing=!1,this.button=0,this.prevPos={x:0,y:0},this.loading=!1,this.pendingDrawings=new Array,this.boardElm=document.querySelector(e),this.colorInput=this.boardElm.querySelector("input[name='foreground-color']"),this.sizeInput=this.boardElm.querySelector("input[name='pen-size']"),this.canvas=this.boardElm.querySelector("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.addEventListener("mousedown",(e=>{this.drawing=!0,this.button=e.button,this.prevPos.x=e.offsetX,this.prevPos.y=e.offsetY,this.ctx.lineCap="round",e.preventDefault()})),this.canvas.addEventListener("mouseup",(()=>{this.drawing=!1})),this.canvas.addEventListener("mousemove",(e=>{if(!this.drawing)return;let t="#FFFFFF",s=parseInt(this.sizeInput.value);0===this.button?t=this.colorInput.value:s+=4,this.draw(this.prevPos.x,this.prevPos.y,e.offsetX,e.offsetY,s,t),this.prevPos={x:e.offsetX,y:e.offsetY}})),this.canvas.oncontextmenu=()=>!1}draw(e,t,s,n,o,i){this.loading?this.pendingDrawings.push({prevX:e,prevY:t,x:s,y:n,size:o,color:i}):(this.ctx.beginPath(),this.ctx.strokeStyle=i,this.ctx.lineWidth=o,this.ctx.moveTo(e,t),this.ctx.lineTo(s,n),this.ctx.stroke())}getState(){return this.canvas.toDataURL("image/png")}setState(e){this.loading=!0;const t=new Image;t.onload=()=>{this.ctx.drawImage(t,0,0);for(const e of this.pendingDrawings)this.ctx.beginPath(),this.ctx.strokeStyle=e.color,this.ctx.lineWidth=e.size,this.ctx.moveTo(e.prevX,e.prevY),this.ctx.lineTo(e.x,e.y),this.ctx.stroke();this.pendingDrawings=new Array,this.loading=!1},t.src=e}};t([(0,e.Share)({maxLog:100})],n.prototype,"draw",null),t([(0,e.GetState)({maxInterval:1e4,maxUpdates:100})],n.prototype,"getState",null),t([(0,e.SetState)()],n.prototype,"setState",null),n=t([(0,e.ShareClass)({snapshot:!0})],n)})()})();